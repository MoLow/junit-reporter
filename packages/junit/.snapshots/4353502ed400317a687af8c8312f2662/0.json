{
  "stderr": "",
  "stdout": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<testsuites>\n\t<testsuite name=\"tests\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n\t\t<testcase name=\"is ok\" time=\"*\" classname=\"test\"/>\n\t\t<testcase name=\"fails\" time=\"*\" classname=\"test\" failure=\"this is an error\">\n\t\t\t<failure type=\"testCodeFailure\" message=\"this is an error\">\n[Error [ERR_TEST_FAILURE]: this is an error] {\n  failureType: 'testCodeFailure',\n  cause: Error: this is an error\n      *\n      *\n      *\n      *\n      *\n      *\n      at async Promise.all (index 0)\n      *\n      at async startSubtest (node:internal/test_runner/harness:214:3),\n  code: 'ERR_TEST_FAILURE'\n}\n\t\t\t</failure>\n\t\t</testcase>\n\t\t<testcase name=\"is a diagnostic\" time=\"*\" classname=\"test\"/>\n\t\t<testcase name=\"should fail\" time=\"*\" classname=\"test\" failure=\"The expression evaluated to a falsy value:  assert(false)\">\n\t\t\t<failure type=\"testCodeFailure\" message=\"The expression evaluated to a falsy value:  assert(false)\">\n[Error [ERR_TEST_FAILURE]: The expression evaluated to a falsy value:\n\n  assert(false)\n] {\n  failureType: 'testCodeFailure',\n  cause: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n  \n    assert(false)\n  \n      *\n      *\n      *\n      *\n      *\n      *\n      * {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: false,\n    expected: true,\n    operator: '=='\n  },\n  code: 'ERR_TEST_FAILURE'\n}\n\t\t\t</failure>\n\t\t</testcase>\n\t</testsuite>\n\t<testsuite name=\"more tests\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n\t\t<testcase name=\"is ok\" time=\"*\" classname=\"test\"/>\n\t</testsuite>\n\t<testcase name=\"is skipped\" time=\"*\" classname=\"test\">\n\t\t<skipped type=\"skipped\" message=\"true\"/>\n\t</testcase>\n\t<testcase name=\"is a todo\" time=\"*\" classname=\"test\">\n\t\t<skipped type=\"todo\" message=\"true\"/>\n\t</testcase>\n\t<testcase name=\"top level diagnostic\" time=\"*\" classname=\"test\"/>\n</testsuites>\n",
  "exitCode": 1
}
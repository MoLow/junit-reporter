name: release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created:  ${{ steps.release.outputs.releases_created }}
      packages:  ${{ steps.get-released-packages.outputs.result }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          monorepo-tags: true
      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs.releases_created }}
      - id: get-released-packages
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/github-script@v6
        with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              const path = require('path');
              const outputs = ${{ toJSON(steps.release.outputs) }};
              return Object.keys(outputs)
                .map((key) => {
                  const match = key.match(/^(.*\/.*)--release_created$/);
                  if (!match) return;
                  return require(path.join('${{ github.workspace }}', match[1], 'package.json')).name;
                })
                .filter(Boolean);
  
  npm-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.release-please.outputs.packages )}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install
      - run: npm publish --provenance --access public
        working-directory: packages/${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

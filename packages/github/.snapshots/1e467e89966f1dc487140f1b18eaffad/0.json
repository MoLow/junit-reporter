{
  "stderr": "",
  "stdout": "::debug::starting to run tests\n::debug::starting to run is ok\n::debug::completed running is ok\n::debug::starting to run fails\n::error title=fails,file=tests/example.js,line=9,col=11::Error [ERR_TEST_FAILURE]: this is an error%0A    at async Promise.all (index 0) {%0A  code: 'ERR_TEST_FAILURE',%0A  failureType: 'testCodeFailure',%0A  cause: Error: this is an error%0A      at TestContext.<anonymous> (CWD/tests/example.js:9:11)%0A      at Test.runInAsyncScope (node:async_hooks:211:14)%0A      at Test.run (node:internal/test_runner/test:887:25)%0A      at Suite.processPendingSubtests (node:internal/test_runner/test:584:18)%0A      at Test.postRun (node:internal/test_runner/test:983:19)%0A      at Test.run (node:internal/test_runner/test:926:12)%0A      at async Promise.all (index 0)%0A      at async Suite.run (node:internal/test_runner/test:1268:7)%0A      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:280:3)%0A}\n::debug::starting to run is a diagnostic\n::debug::completed running is a diagnostic\n::notice file=tests/example.js,line=11,col=3::this is a diagnostic\n::debug::starting to run should fail\n::error title=should fail,file=tests/example.js,line=12,col=31::[Error [ERR_TEST_FAILURE]: The expression evaluated to a falsy value:%0A%0A  assert(false)%0A] {%0A  code: 'ERR_TEST_FAILURE',%0A  failureType: 'testCodeFailure',%0A  cause: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:%0A  %0A    assert(false)%0A  %0A      at TestContext.<anonymous> (CWD/tests/example.js:12:31)%0A      at Test.runInAsyncScope (node:async_hooks:211:14)%0A      at Test.run (node:internal/test_runner/test:887:25)%0A      at Suite.processPendingSubtests (node:internal/test_runner/test:584:18)%0A      at Test.postRun (node:internal/test_runner/test:983:19)%0A      at Test.run (node:internal/test_runner/test:926:12)%0A      at async Suite.processPendingSubtests (node:internal/test_runner/test:584:7) {%0A    generatedMessage: true,%0A    code: 'ERR_ASSERTION',%0A    actual: false,%0A    expected: true,%0A    operator: '=='%0A  }%0A}\n::debug::starting to run more tests\n::debug::starting to run is ok\n::debug::completed running is ok\n::debug::completed running more tests\n::debug::starting to run is skipped\n::debug::completed running is skipped\n::debug::starting to run is a todo\n::debug::completed running is a todo\n::debug::starting to run top level diagnostic\n::debug::completed running top level diagnostic\n::notice file=tests/example.js,line=21,col=1::top level diagnostic\n::group::Test results (4 passed, 2 failed)\n::notice::Total Tests: 8%0ASuites 📂: 2%0APassed ✅: 4%0AFailed ❌: 2%0ACanceled 🚫: 0%0ASkipped ⏭️: 1%0ATodo 📝: 1%0ADuration 🕐: *ms\n::endgroup::\n",
  "exitCode": 1
}